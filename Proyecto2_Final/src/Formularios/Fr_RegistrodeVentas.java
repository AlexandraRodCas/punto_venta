/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Atxy2k.CustomTextField.RestrictedTextField;
import ObjetoNegocio.*;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import DAO.ClientesDAO;
import DAO.ProductosDAO;
import DAO.Rel_productosventasDAO;
import DAO.VentasDAO;
import DAO.Control;

/**
 *
 * @author Luis
 */
public class Fr_RegistrodeVentas extends javax.swing.JFrame {

    /**
     * Creates new form FrRegistrodeVentas
     */
    static private ArrayList<Producto> productosSeleccionados;
    private Control control = new Control();
    private ProductosDAO productosRepository = control.getProductosRepository();

    public Fr_RegistrodeVentas() {
        initComponents();
        RestrictedTextField tope = new RestrictedTextField(txtDescuento);
        tope.setOnlyNums(rootPaneCheckingEnabled);
        llenartabla();
        llenarcomboBox();
        productosSeleccionados = new ArrayList<>();
    }

    public void llenarcomboBox() {

        ClientesDAO cr = control.getClientesRepository();
        ArrayList<Cliente> clientes = cr.consultar();

        for (Cliente cliente : clientes) {
            Cbclientes.addItem(cliente);
        }

    }

    public void llenartabla() {

        ProductosDAO productosRepository = control.getProductosRepository();
        ArrayList<Producto> productos = productosRepository.consultar();

        DefaultTableModel modelo = (DefaultTableModel) tblProducto.getModel();
        modelo.setRowCount(0);
        for (Producto prov : productos) {
            Object[] fila = new Object[4];
            fila[0] = prov.getIdproducto();
            fila[1] = prov.getNombre();
            fila[2] = prov.getPrecioActual();
            fila[3] = prov.getStock() + "";

            modelo.addRow(fila);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        scrollPane1 = new java.awt.ScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProducto = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        scrollPane2 = new java.awt.ScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProductosSeleccionados = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        txtDescuento = new javax.swing.JTextField();
        txtSubtotal = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        Cbclientes = new javax.swing.JComboBox<>();
        btnAplicar = new javax.swing.JButton();
        btnAtras = new javax.swing.JButton();
        CbBuscar = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registro de Ventas");

        tblProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id Producto", "Nombre", "Precio Actual", "Stock"
            }
        ));
        tblProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProducto);

        scrollPane1.add(jScrollPane1);

        jLabel1.setText("Buscador de productos");

        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel2.setText("Productos seleccionados");

        tblProductosSeleccionados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Producto", "Nombre", "Precio Actual", "Cantidad", "Monto Total"
            }
        ));
        tblProductosSeleccionados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductosSeleccionadosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblProductosSeleccionados);

        scrollPane2.add(jScrollPane2);

        jLabel3.setText("Detalles de venta");

        jLabel4.setText("Cliente");

        jLabel5.setText("Subtotal");

        jLabel6.setText("Descuento");

        jLabel7.setText("Total");

        txtTotal.setEditable(false);

        txtDescuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescuentoKeyTyped(evt);
            }
        });

        txtSubtotal.setEditable(false);

        btnRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Floppy.png"))); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRegistrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Sign_Delete_Icon_32.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAplicar.setText("Aplicar");
        btnAplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAplicarActionPerformed(evt);
            }
        });

        btnAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salir_32_1.gif"))); // NOI18N
        btnAtras.setText("Atras");
        btnAtras.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAtras.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        CbBuscar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nombre", "Id" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnRegistrar)
                        .addGap(26, 26, 26)
                        .addComponent(btnCancelar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(btnAplicar))
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Cbclientes, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnAtras)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(scrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnBuscar)
                        .addGap(48, 48, 48)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(85, 85, 85))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(CbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(Cbclientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(btnAplicar))
                                .addGap(18, 18, 18)
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnRegistrar)))
                    .addComponent(scrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(scrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAtras)
                        .addGap(73, 73, 73))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_txtBuscarActionPerformed

    public void Descuento() {
        if (!txtDescuento.getText().equals("")) {
            float descuento = Float.valueOf(txtDescuento.getText());
            float subtotal = Float.valueOf(txtSubtotal.getText());
            if (descuento >= subtotal) {
                JOptionPane.showMessageDialog(this, "el descuento no puede ser mayor o igual al subtotal");
                return;
            }
            float total = subtotal - descuento;

            txtTotal.setText(String.valueOf(total));
            //System.out.println(total);
        } else {
            JOptionPane.showMessageDialog(this, "No has puesto descuento");
        }
    }

    public void subTotal() {
        int numerofilas = tblProductosSeleccionados.getRowCount();
        float Subtotal = 0;
        for (int i = 0; i < numerofilas; i++) {
            Subtotal = Subtotal + (float) tblProductosSeleccionados.getValueAt(i, 4);

        }
        txtSubtotal.setText(String.valueOf(Subtotal));

    }

    public void llenarConMouse() {

        int indiceFila = tblProducto.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) tblProductosSeleccionados.getModel();
        if (tblProducto.getValueAt(indiceFila, 0).equals(String.class)) {
            return;
        }
        long idCategoria = (Long) tblProducto.getValueAt(indiceFila, 0);

        for (int i = 0; i < tblProductosSeleccionados.getRowCount(); i++) {
            if (idCategoria == (long) tblProductosSeleccionados.getValueAt(i, 0)) {
                int valornuevo = (int) tblProductosSeleccionados.getValueAt(i, 3) + 1;
                tblProductosSeleccionados.setValueAt(valornuevo, i, 3);

                float precio = (float) tblProductosSeleccionados.getValueAt(i, 2);
                int cantidad = (int) tblProductosSeleccionados.getValueAt(i, 3);
                float montoTotal = precio * cantidad;

                tblProductosSeleccionados.setValueAt(montoTotal, i, 4);
                return;
            }
        }

        Producto p = control.getProductosRepository().buscarPorId(idCategoria);

        Object[] fila = new Object[5];
        fila[0] = p.getIdproducto();
        fila[1] = p.getNombre();
        fila[2] = p.getPrecioActual();
        fila[3] = 1;
        float montototal = p.getPrecioActual();
        fila[4] = montototal;

        modelo.addRow(fila);

    }
    private void tblProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductoMouseClicked
        // TODO add your handling code here:
        llenarConMouse();
        subTotal();

    }//GEN-LAST:event_tblProductoMouseClicked

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
        if(Integer.parseInt(txtDescuento.getText())>0){
            String subB=txtSubtotal.getText().substring(0, txtSubtotal.getText().indexOf("."));
            String subT=txtTotal.getText().substring(0, txtTotal.getText().indexOf("."));
            int totalP= Integer.parseInt(subB)-Integer.parseInt(txtDescuento.getText());
            if(totalP!=(Integer.parseInt(subT))){
                Descuento();
            }
        }
        for (int i = 0; i < tblProductosSeleccionados.getRowCount(); i++) {
            int cantidad = (int) tblProductosSeleccionados.getValueAt(i, 3);
            ProductosDAO pr = control.getProductosRepository();
            Producto producto = pr.buscarPorId((long) tblProductosSeleccionados.getValueAt(i, 0));
            if(producto.getStock()<cantidad){
                JOptionPane.showMessageDialog(this, "Excede el stock", "Error", JOptionPane.INFORMATION_MESSAGE);
                vaciarCampos();
                llenartabla();
                return;
            }
        }
        registrarVenta();
        vaciarCampos();
        llenartabla();
        
        
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnAplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAplicarActionPerformed
        // TODO add your handling code here:
        
        Descuento();

    }//GEN-LAST:event_btnAplicarActionPerformed
    public void eliminarAlpicar() {
        DefaultTableModel modelo = (DefaultTableModel) tblProductosSeleccionados.getModel();
        for (int i= 0; i < tblProductosSeleccionados.getRowCount(); i++) {
            if(i == tblProductosSeleccionados.getSelectedRow()){
            int valornuevo = (int) tblProductosSeleccionados.getValueAt(i, 3) - 1;

            float precio = (float) tblProductosSeleccionados.getValueAt(i, 2);
            int cantidad = (int) valornuevo;
            float montoTotal = precio * cantidad;


            if (valornuevo == 0) {
                modelo.removeRow(i);
                return;
            }

            tblProductosSeleccionados.setValueAt(valornuevo, i, 3);
            tblProductosSeleccionados.setValueAt(montoTotal, i, 4);
            }
        }

    }
    private void tblProductosSeleccionadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosSeleccionadosMouseClicked
        // TODO add your handling code here:
        eliminarAlpicar();
        subTotal();


    }//GEN-LAST:event_tblProductosSeleccionadosMouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        vaciarCampos();
        llenartabla();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        // TODO add your handling code here:
        Fr_Menu fr = new Fr_Menu();
        fr.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        if(CbBuscar.getSelectedIndex()==0){
            buscarporNombre(txtBuscar.getText());
        }else{
         buscar();   
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtDescuentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescuentoKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        
        if (!numeros)
        {
            evt.consume();
        }

        if (txtDescuento.getText().trim().length() == 7) {
            evt.consume();
        }
    }//GEN-LAST:event_txtDescuentoKeyTyped

    public void registrarVenta() {
        if (tblProductosSeleccionados.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "No has seleccionado ningun producto");
            return;
        }

        VentasDAO ventasRepository = control.getVentasRepository();
        Calendar calendar = Calendar.getInstance();
        float Totalapagar;
        float DescuentoaAplicar;
        if (!txtDescuento.getText().equals("")) {
            if (txtTotal.getText().equals("")) {
                Descuento();
            }
            Totalapagar = Float.valueOf(txtTotal.getText());
            DescuentoaAplicar = Float.valueOf(txtDescuento.getText());
        } else {
            Totalapagar = Float.valueOf(txtSubtotal.getText());
            DescuentoaAplicar = 0;
        }
        Venta venta = new Venta(calendar, DescuentoaAplicar, Totalapagar, (Cliente) Cbclientes.getSelectedItem());
        ventasRepository.Guardar(venta);
        for (int i = 0; i < tblProductosSeleccionados.getRowCount(); i++) {
            float precio = (float) tblProductosSeleccionados.getValueAt(i, 2);
            int cantidad = (int) tblProductosSeleccionados.getValueAt(i, 3);
            float montoTotal = (float) tblProductosSeleccionados.getValueAt(i, 4);
            ProductosDAO pr = control.getProductosRepository();
            Producto producto = pr.buscarPorId((long) tblProductosSeleccionados.getValueAt(i, 0));
            try {
                Producto productoeditato;
                productoeditato = new Producto(producto.getIdproducto(), producto.getNombre(),
                        producto.getPrecioActual(),(producto.getStock()-cantidad));
                productosRepository.Actualizar(productoeditato);
            } catch (Exception e) {
            }

            Rel_productosventas rel_productosventas = new Rel_productosventas(precio, cantidad, montoTotal, producto, venta);
            Rel_productosventasDAO rpr = control.getRel_productosventasrepository();
            rpr.Guardar(rel_productosventas);
            
            
        }

    }
     public void buscarporNombre(String Nombre) {
        if (!txtBuscar.getText().equals("") && ValidarSoloLetras(txtBuscar.getText())) {
            ArrayList<Producto> productos = productosRepository.consultar();
            DefaultTableModel modelo = (DefaultTableModel) tblProducto.getModel();
            Producto producto = null;

            for (Producto producto1 : productos) {

                if (producto1.getNombre().equalsIgnoreCase(Nombre)) {
                    producto = producto1;
                }

                if (producto != null) {
                    modelo.setRowCount(0);
                    Object[] fila = new Object[4];
                    fila[0] = producto.getIdproducto() + "";
                    fila[1] = producto.getNombre();
                    fila[2] = producto.getPrecioActual();
                    fila[3] = producto.getStock();
                    
                    modelo.addRow(fila);

                } 
            }

        }else {
            JOptionPane.showMessageDialog(this, "Introdusca un valor valido", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
        vaciarCampos();
    }
      public void buscar() {
        
        if (!txtBuscar.getText().equals("")&& ValidarSoloNumeros(txtBuscar.getText())) {

            Producto productoBuscado = productosRepository.buscarPorId(Long.valueOf(txtBuscar.getText()));
            
            DefaultTableModel modelo = (DefaultTableModel) tblProducto.getModel();

            if (productoBuscado != null) {
                modelo.setRowCount(0);
                Object[] fila = new Object[4];
                fila[0] = productoBuscado.getIdproducto() + "";
                fila[1] = productoBuscado.getNombre();
                fila[2] = productoBuscado.getPrecioActual();
                fila[3] = productoBuscado.getStock();
                

                modelo.addRow(fila);
            } else {
                JOptionPane.showMessageDialog(this, "No existe Producto con este Id", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Introdusca solo numeros porfavor", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
        vaciarCampos();
    }

    public void vaciarCampos() {
        txtDescuento.setText("");
        txtSubtotal.setText("");
        txtTotal.setText("");
        txtBuscar.setText("");

        DefaultTableModel modelo = (DefaultTableModel) tblProductosSeleccionados.getModel();
        modelo.setRowCount(0);

    }
    public boolean ValidarSoloNumeros(String texto) {

        if (texto.matches("\\d*")) {
            return true;
        } else {
            return false;
        }

    }
    public boolean ValidarSoloLetras(String texto){
        if (texto.matches("\\d*")){
        return false;
    }else{
          return true;
     }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fr_RegistrodeVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fr_RegistrodeVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fr_RegistrodeVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fr_RegistrodeVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fr_RegistrodeVentas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CbBuscar;
    private javax.swing.JComboBox<Object> Cbclientes;
    private javax.swing.JButton btnAplicar;
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.ScrollPane scrollPane1;
    private java.awt.ScrollPane scrollPane2;
    private javax.swing.JTable tblProducto;
    private javax.swing.JTable tblProductosSeleccionados;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtSubtotal;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
